# Generated by Django 4.1.5 on 2023-03-28 13:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0015_delete_physicalblottermodel'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhysicalBlotterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('Date', models.CharField(max_length=100)),
                ('Trader', models.CharField(blank=True, max_length=100, null=True)),
                ('Company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('Strategy', models.CharField(blank=True, max_length=100, null=True)),
                ('Derivative', models.CharField(choices=[('Physical', 'Physical')], default='Physical', max_length=100)),
                ('Trade_id', models.CharField(blank=True, max_length=100, null=True)),
                ('Buy_sell', models.CharField(blank=True, choices=[('Buy', 'Buy'), ('Sell', 'Sell')], max_length=100, null=True)),
                ('Cargo', models.CharField(max_length=100)),
                ('Pricing_method', models.CharField(blank=True, choices=[('Fixed', 'Fixed'), ('Float', 'Float')], max_length=100, null=True)),
                ('Quantity', models.IntegerField(blank=True, null=True)),
                ('Density', models.FloatField(blank=True, null=True)),
                ('Nominated_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('Premium_discount', models.FloatField(blank=True, null=True)),
                ('Pricing_term', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.CharField(max_length=100)),
                ('end_date', models.CharField(max_length=100)),
                ('Holiday', models.CharField(max_length=100)),
                ('Total_no_days', models.IntegerField(blank=True, null=True)),
                ('Delivery_mode', models.CharField(blank=True, choices=[('Tank', 'Tank'), ('Vessel', 'Vessel'), ('PLT', 'PLT')], max_length=100, null=True)),
                ('Port', models.CharField(max_length=100)),
                ('Terminal', models.CharField(max_length=100)),
                ('Vessal_name', models.CharField(blank=True, max_length=120, null=True)),
                ('Tank', models.CharField(max_length=100)),
                ('External_Terminal', models.CharField(blank=True, max_length=120, null=True)),
                ('Headging', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('Purchase_sales_ID', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('Remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('Terminal_cost', models.IntegerField(blank=True, null=True)),
                ('Freight_cost', models.IntegerField(blank=True, null=True)),
                ('Vessal_cost', models.IntegerField(blank=True, null=True)),
                ('additional_secondary_charge', models.IntegerField(blank=True, null=True)),
                ('additional_cost_type', models.CharField(blank=True, max_length=100, null=True)),
                ('Total_Secondary_Cost', models.IntegerField(blank=True, null=True)),
                ('price_days', models.IntegerField(blank=True, null=True)),
                ('unprice_days', models.IntegerField(blank=True, null=True)),
                ('total_volume', models.FloatField(blank=True, null=True)),
                ('price_volume', models.FloatField(blank=True, null=True)),
                ('unprice_volume', models.FloatField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('priced_price', models.IntegerField(blank=True, null=True)),
                ('unpriced_price', models.IntegerField(blank=True, null=True)),
                ('Shore_recieved', models.IntegerField(blank=True, null=True)),
                ('Difference', models.IntegerField(blank=True, null=True)),
                ('PnL', models.IntegerField(blank=True, null=True)),
                ('Difference_Pnl', models.IntegerField(blank=True, null=True)),
                ('Total_Profit_Loss', models.IntegerField(blank=True, null=True)),
                ('Book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.book')),
                ('Pricing_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.contractm')),
                ('Unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.unit1')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
